---
import MainMenuLayout from "../../layouts/MainMenuLayout.astro";
import ProjectCard from "../../components/ProjectCard.astro";
import ProjectInfo from "../../components/ProjectInfo.astro";

const GITHUB_GRAPHQL_API = "https://api.github.com/graphql";
const GITHUB_ACCESS_TOKEN = import.meta.env.GITHUB_TOKEN; // Use the token from environment variables

// GraphQL query to fetch public repositories and their languages
const query = `
  query ($username: String!) {
    user(login: $username) {
      repositories(first: 100, privacy: PUBLIC, orderBy: {field: PUSHED_AT, direction: DESC}) {
        nodes {
          name
          description
          url
          pushedAt
          languages(first: 10) {
            nodes {
              name
            }
          }
        }
      }
    }
  }
`;

let projects = [];

try {
  const response = await fetch(GITHUB_GRAPHQL_API, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${GITHUB_ACCESS_TOKEN}`,
    },
    body: JSON.stringify({
      query,
      variables: {
        username: "blodroed", // Replace with your GitHub username
      },
    }),
  });

  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }

  const result = await response.json();

  if (result.errors) {
    throw new Error(`GraphQL error: ${result.errors.map((e) => e.message).join(", ")}`);
  }

  // Extract repositories and their languages
  projects = result.data.user.repositories.nodes.map((repo) => ({
    name: repo.name,
    description: repo.description,
    html_url: repo.url,
    pushedAt: repo.pushedAt,
    languages: repo.languages.nodes.map((lang) => lang.name),
  }));
} catch (error) {
  console.error("Failed to fetch projects:", error);
}
---

<MainMenuLayout>
  <!-- Jump to sections bar -->

  <!-- Main Projects Header -->
  <div class="container mx-auto w-8/12" id="projects-title">
    <h1 class="text-3xl md:text-6xl text-center mb-12">
      My proudest achievements:
    </h1>
  </div>

  <!-- Container for selected projects -->
  <div class="container mx-auto w-10/12 mb-4" id="selected-projects">
    <ProjectInfo
      title="Jamly - Gamejam Platform"
      description="In this group project I worked on a platform for hosting Gamejams. On this platform users can create and join Gamejams while also playing submitted games in the browser. We integrated a number of technologies, most importantly Azure Blob Storage for storing large binary files."
      technologies={[
        "C#",
        "ASP.NET Core 8.0",
        "SQL",
        "WebGL",
        "Sendgrid Email",
        "Azure Blob Storage",
        "TailwindCSS",
      ]}
      link="/projects/Jamly"
      imageSrc="Jamly-page.png"
      order={1}
    />
    <ProjectInfo
      title="BetaLAN Leader"
      description="I have organized and led a team to host a great LAN-party for the students at UiA. At this event we had over 50 participants and a number of tournaments in games like CS:GO, League of Legends and Rocket League. My role was leading the team, planning the event, marketing and budgeting. I also had a hand in the technical setup of the event."
      link="/projects/BetaLAN-leader"
      technologies={[
        "Leadership",
        "Event Planning",
        "Networking",
        "Teamwork",
        "Budgeting",
        "Marketing",
        "Logistics",
      ]}
      imageSrc="BetaLAN-2024.jpg"
      order={2}
    />
  </div>

  <!-- Container for the github repo cards -->
  <div class="container flex justify-center items-center sm:mt-12 md:mt-24">
    <div class="w-full max-w-7xl" id="repo-grid">
      <h2 class="ml-5 text-2xl">My contributions:</h2>
      <div class="projects-grid">
        {projects.map((project) => <ProjectCard project={project} />)}
      </div>
    </div>
  </div>
</MainMenuLayout>

<style>
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
    padding: 15px;
    align-content: center;
  }
</style>
